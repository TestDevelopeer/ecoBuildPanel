$((function () {

	const sendForm = () => {
		var $data = {};
		$('form').find('input').each(function () {
			$data[this.name] = $(this).val();
		});
		$.ajax({
			headers: {
				'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
			},
			url: '/register',
			type: 'post',
			data: $data,
			success: function (res) {
				location.href = res;
			}
		});
	}

	var e = "/app-assets/",
		r = document.querySelector(".register-multi-steps-wizard"),
		t = $(".auth-register-form"),
		n = $(".select2"),
		a = $(".credit-card-mask"),
		i = $(".expiry-date-mask"),
		s = $(".cvv-code-mask"),
		d = $(".mobile-number-mask"),
		o = $(".pin-code-mask");
	if ("laravel" === $("body").attr("data-framework") && (e = $("body").attr("data-asset-path")), t.length && t.validate({
		rules: {
			"register-username": {
				required: !0
			},
			"register-email": {
				required: !0,
				email: !0
			},
			"register-password": {
				required: !0
			}
		}
	}), void 0 !== typeof r && null !== r) {
		var l = new Stepper(r);
		$(r).find("form").each((function () {
			$(this).validate({
				rules: {
					first_name: {
						required: !0,
						minlength: 3
					},
					second_name: {
						required: !0,
						minlength: 3
					},
					last_name: {
						required: !0,
						minlength: 3
					},
					city: {
						required: !0
					},
					phone: {
						required: !0
					},
					school: {
						required: !0
					},
					social: {
						required: !0
					},
					class: {
						required: !0,
					},
					teacher_name: {
						required: !0,
						minlength: 3
					},
					teacher_job: {
						required: !0
					},
					email: {
						required: !0,
						email: !0
					},
					password: {
						required: !0,
						minlength: 8
					},
					repeat_password: {
						required: !0,
						minlength: 8,
						equalTo: "#password"
					},
				},
				messages: {
					first_name: {
						required: "Введите фамилию",
						minlength: "Неверная фамилия"
					},
					second_name: {
						required: "Введите имя",
						minlength: "Неверное имя"
					},
					last_name: {
						required: "Введите отчество",
						minlength: "Неверное отчество"
					},
					city: {
						required: "Введите город"
					},
					phone: {
						required: "Введите телефон"
					},
					school: {
						required: "Введите учебное заведение"
					},
					social: {
						required: "Введите соц. сеть"
					},
					class: {
						required: "Введите класс / курс"
					},
					teacher_name: {
						required: "Введите ФИО руководителя"
					},
					teacher_job: {
						required: "Введите должность руководителя"
					},
					email: {
						required: "Введите Email",
						email: 'Неверный формат Email'
					},
					password: {
						required: "Введите пароль",
						minlength: "Минимальная длина 8 символов"
					},
					repeat_password: {
						required: "Введите пароль еще раз",
						minlength: "Минимальная длина 8 символов",
						equalTo: "Пароли не совпадают"
					}
				}
			})
		})), $(r).find(".btn-next").each((function () {
			$(this).on("click", (function (e) {
				$(this).parent().siblings("form").valid() ? l.next() : e.preventDefault()
			}))
		})), $(r).find(".btn-prev").on("click", (function () {
			l.previous()
		})), $(r).find(".btn-submit").on("click", (function () {
			$(this).parent().siblings("form").valid() && sendForm()
		}))
	}
	n.each((function () {
		var e = $(this);
		e.wrap('<div class="position-relative"></div>'), e.select2({
			dropdownAutoWidth: !0,
			width: "100%",
			dropdownParent: e.parent()
		})
	})), a.length && a.each((function () {
		new Cleave($(this), {
			creditCard: !0,
			onCreditCardTypeChanged: function (r) {
				const t = document.querySelectorAll(".card-type");
				if ("" != r && "unknown" != r)
					//! we accept this approach for multiple credit card masking
					for (let n = 0; n < t.length; n++) t[n].innerHTML = '<img src="' + e + "images/icons/payments/" + r + '-cc.png" height="24"/>';
				else
					for (let e = 0; e < t.length; e++) t[e].innerHTML = ""
			}
		})
	})), i.length && new Cleave(i, {
		date: !0,
		delimiter: "/",
		datePattern: ["m", "y"]
	}), s.length && new Cleave(s, {
		numeral: !0,
		numeralPositiveOnly: !0
	}), d.length && new Cleave(d, {
		phone: !0,
		phoneRegionCode: "RUS"
	}), o.length && new Cleave(o, {
		delimiter: "",
		numeral: !0
	})
}));